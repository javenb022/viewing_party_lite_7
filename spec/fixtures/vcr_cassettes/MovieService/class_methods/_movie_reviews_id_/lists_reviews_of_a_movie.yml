---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?query=The%20Dark%20Knight
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <TMDB_BEARER_TOKEN>
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 19 Jul 2023 03:34:23 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28130
      X-Memc:
      - HIT
      X-Memc-Key:
      - 85f008d84bd4b330517d09695b99310e
      X-Memc-Age:
      - '3850'
      X-Memc-Expires:
      - '19305'
      Etag:
      - W/"999058d5442b865d6b9650772ab7b7c1"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 a4888bfa57444daa340ca8dc53629170.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD58-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - uOy7c6tFwyJLxEKvAC0joGtOOcLYgagnzlQzi4l756I8y8yygUUobQ==
      Age:
      - '14'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 19 Jul 2023 03:34:37 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/155/reviews
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <TMDB_BEARER_TOKEN>
      User-Agent:
      - Faraday v2.7.10
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Server:
      - openresty
      X-Memc:
      - HIT
      X-Memc-Key:
      - 58bcadc93e5f1bd7c0b503830ce10f36
      X-Memc-Age:
      - '19065'
      X-Memc-Expires:
      - '4712'
      Date:
      - Wed, 19 Jul 2023 03:34:22 GMT
      Cache-Control:
      - public, max-age=25747
      Etag:
      - W/"2b1337944be091de4931f289d974c4ba"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 124fcc45b0cac625cd0077abe70a7c60.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ORD58-P1
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - QpG8kT7I-IiwrKv-FRj14mGKrythx8rxNyJjyi_CRq6mli_Efpj7Jg==
      Age:
      - '15'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 19 Jul 2023 03:34:37 GMT
recorded_with: VCR 6.2.0
